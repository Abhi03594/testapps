namespace: zeppelin

zeppelin:
  image: 
    repository: apache/zeppelin
    tag: 0.8.1
    pullPolicy: IfNotPresent
  
  replicaCount: 3

  service:
    type: LoadBalancer
    port: 8080

  resources:
    requests:
      memory: "1024Mi"
      cpu: "1000m"
    limits:
      memory: "1024Mi"
      cpu: "1000m"
      

  livenessProbe:
    initialDelaySeconds: 45
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /
      port: 8080
    initialDelaySeconds: 20
    timeoutSeconds: 1

  deploymentStrategy:
    type: RollingUpdate
    maxUnavailable: 0

hadoop:
  useConfigMap: false
  configMapName: hadoop-hadoop
  configPath: /usr/hadoop-2.7.3/etc/hadoop

spark:
  driverMemory: 1g
  executorMemory: 1g
  numExecutors: 2

hpa:
  enabled: true

podDisruptionBudget:
  maxUnavailable: 1

persistence:
  enabled: true
  ## Set annotations on pvc
  annotations:

  ## Specify an existing volume claim instead of creating a new one.
  ## When using this option all following options like storageClass, accessMode and size are ignored.
  # existingClaim:

  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: gp2
  accessMode: ReadWriteOnce
  size: 30Gi

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
    # nginx.ingress.kubernetes.io/auth-secret: zeppelin-tls-secret
  path: /
  hosts:
    - zeppelin.local
  tls: []
    # - secretName: zeppelin-tls-secret
    #   hosts: zeppelin.local

nodeSelector: {}
