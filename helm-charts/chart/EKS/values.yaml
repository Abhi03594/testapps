namespace: grafana

image:
  repository: grafana/grafana
  tag: 7.0.0
  pullPolicy: IfNotPresent

crd:
  install: true

rbac:
  create: true
  name: grafana-opeartor

serviceAccount:
  create: true
  name: grafana-operator

serviceAccount:
  create: true
  name:
  nameTest:

replicas: 1

deploymentStrategy:
  type: RollingUpdate

readinessProbe:
  httpGet:
    path: /api/health
    port: 3000

livenessProbe:
  httpGet:
    path: /api/health
    port: 3000
  initialDelaySeconds: 60
  timeoutSeconds: 30
  failureThreshold: 10

testFramework:
  image: "dduportal/bats"
  tag: "0.4.0"
  securityContext: {}

securityContext:
  runAsUser: 472
  fsGroup: 472

podDisruptionBudgetEnabled: true
podDisruptionBudget:
  maxUnavailable: 1

extraConfigmapMounts: []

extraEmptyDirMounts: []

downloadDashboardsImage:
  repository: appropriate/curl
  tag: latest
  pullPolicy: IfNotPresent

downloadDashboards:
  env: {}

podPortName: grafana

hpa:
  enabled: true

service:
  type: LoadBalancer
  port: 3000
  targetPort: 3000
  annotations: {}
  labels: {}
  portName: service

loadBalancerSourceRanges:
- 0.0.0.0/0

ingress:
  enabled: false
  annotations: {}
  labels: {}
  path: /
  hosts:
    - chart-example.local
  extraPaths: []
  tls: []
  
resources: 
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 100m
    memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

extraInitContainers: []

extraContainers: |

persistence:
  type: pvc
  enabled: true
  storageClassName: gp2
  accessModes:
    - ReadWriteOnce
  size: 10Gi
  finalizers:
    - kubernetes.io/pvc-protection

initChownData:
  enabled: true

  image:
    repository: busybox
    tag: "1.30"
    pullPolicy: IfNotPresent

  resources: {}
 
adminUser: admin
# adminPassword: strongpassword

# Use an existing secret for the admin user.
admin:
  existingSecret: ""
  userKey: admin-user
  passwordKey: admin-password


env: {}


envFromSecret: ""


extraSecretMounts: []
  
extraVolumeMounts: []
  
plugins: []
  
datasources: {}

notifiers: {}

dashboardProviders: {}

dashboards: {}
 
dashboardsConfigMaps: {}

grafana.ini:
  paths:
    data: /var/lib/grafana/data
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net

ldap:
  
  existingSecret: ""

  config: ""
  
smtp:
  
  existingSecret: ""
  userKey: "user"
  passwordKey: "password"


sidecar:
  image: yobitel/k8s-sidecar:0.1.20
  imagePullPolicy: IfNotPresent
  resources: {}

  dashboards:
    enabled: false
    
    label: grafana_dashboard
    
    folder: /tmp/dashboards

    defaultFolderName: null
    
    searchNamespace: null

    provider:

      name: sidecarProvider

      orgid: 1

      folder: ''

      type: file

      disableDelete: false
  datasources:
    enabled: false
    label: grafana_datasource
    searchNamespace: null


