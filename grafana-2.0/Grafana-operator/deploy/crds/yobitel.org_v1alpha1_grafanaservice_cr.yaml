apiVersion: yobitel.org/v1alpha1
kind: GrafanaService
metadata:
  name: example-grafanaservice
spec:
  # Default values copied from <project_dir>/helm-charts/grafana/values.yaml
  
  admin:
    existingSecret: ""
    passwordKey: admin-password
    userKey: admin-user
  adminUser: admin
  affinity: {}
  dashboardProviders: {}
  dashboards: {}
  dashboardsConfigMaps: {}
  datasources: {}
  deploymentStrategy:
    type: RollingUpdate
  downloadDashboards:
    env: {}
  downloadDashboardsImage:
    pullPolicy: IfNotPresent
    repository: appropriate/curl
    tag: latest
  env: {}
  envFromSecret: ""
  extraConfigmapMounts: []
  extraContainers: ""
  extraEmptyDirMounts: []
  extraInitContainers: []
  extraSecretMounts: []
  extraVolumeMounts: []
  grafana.ini:
    analytics:
      check_for_updates: true
    grafana_net:
      url: https://grafana.net
    log:
      mode: console
    paths:
      data: /var/lib/grafana/data
      logs: /var/log/grafana
      plugins: /var/lib/grafana/plugins
      provisioning: /etc/grafana/provisioning
  hpa:
    enabled: true
  image:
    pullPolicy: IfNotPresent
    repository: grafana/grafana
    tag: 7.0.0
  ingress:
    annotations: {}
    enabled: false
    extraPaths: []
    hosts:
    - chart-example.local
    labels: {}
    path: /
    tls: []
  initChownData:
    enabled: true
    image:
      pullPolicy: IfNotPresent
      repository: busybox
      tag: "1.30"
    resources: {}
  ldap:
    config: ""
    existingSecret: ""
  livenessProbe:
    failureThreshold: 10
    httpGet:
      path: /api/health
      port: 3000
    initialDelaySeconds: 60
    timeoutSeconds: 30
  loadBalancerSourceRanges:
  - 0.0.0.0/0
  namespace: grafana
  nodeSelector: {}
  notifiers: {}
  persistence:
    accessModes:
    - ReadWriteOnce
    enabled: true
    finalizers:
    - kubernetes.io/pvc-protection
    size: 10Gi
    type: pvc
  plugins: []
  podDisruptionBudget:
    maxUnavailable: 1
  podDisruptionBudgetEnabled: true
  podPortName: grafana
  readinessProbe:
    httpGet:
      path: /api/health
      port: 3000
  replicas: 1
  resources:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    fsGroup: 472
    runAsUser: 472
  service:
    annotations: {}
    labels: {}
    port: 3000
    portName: service
    targetPort: 3000
    type: LoadBalancer
  serviceAccount:
    create: true
    name: null
    nameTest: null
  sidecar:
    dashboards:
      defaultFolderName: null
      enabled: false
      folder: /tmp/dashboards
      label: grafana_dashboard
      provider:
        disableDelete: false
        folder: ""
        name: sidecarProvider
        orgid: 1
        type: file
      searchNamespace: null
    datasources:
      enabled: false
      label: grafana_datasource
      searchNamespace: null
    image: yobitel/k8s-sidecar:0.1.20
    imagePullPolicy: IfNotPresent
    resources: {}
  smtp:
    existingSecret: ""
    passwordKey: password
    userKey: user
  testFramework:
    image: dduportal/bats
    securityContext: {}
    tag: 0.4.0
  tolerations: []
  
